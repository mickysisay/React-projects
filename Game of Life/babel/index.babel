var gameHeight = 50;
var gameWidth = 50;
var gameArray =[];
var playingGame;
var speedName='Medium';
var sizeName='Large';
var gameSpeed=100;
class Run extends React.Component{
  constructor(props){
    super(props);
    this.state= {
      counter : 0,
      touch :0,
      d : {
        backgrouncColor : 'black',
        width : '10px',
        height : '10px'
      },
       a : {
        backgrouncColor : 'red',
        width : '10px',
        height : '10px'
      },
      edit : 'Play'
    }
         
  }
  componentWillMount(){
    //first for loop to play
    
    for(var i=0; i<gameWidth;i++){
       var arr=[];
       for(var j=0; j<gameHeight;j++){
       //  var ran = Math.random()>0.5 ? 'd':'a' 
         arr.push('d');
       }
       gameArray.push(arr);
     }
    
  }
  //called when clicked then change the box
  test2 (event){
   if(this.state.edit=='Play'){
    //console.log($('.game-play').width());
      var num=event.target.id.split(',');
      
    var row = Number(num[1]);
   var column = Number(num[0]); 
    //console.log(event.target.className);
  gameArray[column][row]= gameArray[column][row]=='d' ? 'a':'d';
     event.target.className = gameArray[column][row];
     this.setState({touch : this.state.touch +1});  
    }
  
  }
  //changeSize
  sizeChanger(w,h,event){
    if(this.state.edit == 'Play'){
     sizeName=event.target.innerHTML;
      gameWidth=w;
    gameHeight =h;
    $('.game-play').css('width',((gameWidth*15)+20)+'px').css('margin-left',(((1200-(gameWidth*15)+20))/2)+'px');
    
    this.randomize('reset');
    }
  }
  //speedChange
  speedChanger(spe,event){
    if(this.state.edit=='Play'){
    speedName=event.target.innerHTML;
    //this.switcher();
    gameSpeed=spe;  
    //this.switcher();
    this.setState({
      touch : this.state.touch+1
    });
      //this.randomize('reset');
    }/*else{
      speedName=event.target.innerHTML;
   // this.switcher();
    gameSpeed=spe;  
      this.switcher();
      console.log(this.state.edit);
      //this.switcher();
    console.log(this.state.edit);  
    }*/
  }
  //randomize
  randomize(kind){
     
    if(this.state.edit=='Play'){
      gameArray =[];
    var sth = kind=='random' ? 0.5 : 1; 
       for(var i=0; i<gameWidth;i++){
       var arr=[];
       for(var j=0; j<gameHeight;j++){
       //  var ran = Math.random()>0.5 ? 'd':'a' 
         arr.push(Math.random()>sth ? 'a':'d' );
       }
       gameArray.push(arr);
     }
     if(kind=='random'){this.setState({touch:this.state.touch+1}); }  
    else if(kind=='reset'){
      this.setState({counter: 0});
    }
    }
    
  }
  //stops or starts game
  switcher(){
   
    
   if(this.state.edit == 'Play'){
     playingGame = setInterval(()=>{
          this.setState({counter :this.state.counter+1   
                                });  
       /*if(this.state.edit=='Play'){
        clearInterval(playingGame); 
       }*/
       
    },gameSpeed);
   }else if (this.state.edit == 'Stop'){
     
     clearInterval(playingGame);
   }
    this.setState({
      edit : this.state.edit == 'Stop' ? 'Play' : 'Stop'
    }); 
  }
  Counter (){
    
    this.setState({
      counter : this.state.counter +1
    });
  }
  render(){
    //console.log(gameArray[-1]);
    
    if(this.state.edit=='Play'){
    var y=-1;
      var ret = gameArray.map((items) => {
        //console.log(items);     
       var x=-1; 
       y++; 
       
       return (<div className='block-now'>{items.map((item)=>{
         // console.log(y,x,item);
          x++;
             return (<div onClick = {(event)=>this.test2(event)} id={y.toString()+','+x.toString()} className={item}></div>);
         
       
        })}</div>);
      
     }); 
    }else{
      var counte=0;
      var yb =0;
      gameArray.map((items)=>{
        var xb=0;
        items.map((item)=>{
           var other = item=='d' ? 'a': 'd';
          var count=0;
          var lessY=yb-1;
          var greatY=yb+1;
          var lessX=xb-1;
          var greatX=xb+1;
          
            if(greatX == gameHeight){
              greatX=0;   
               }
            if(greatY == gameWidth){
                 greatY=0;
               }
            
          
           if(lessX == -1){
            lessX = gameHeight-1;
           }if(lessY == -1){
            lessY = gameWidth-1;
           }
          
          
          if(item == 'a' || item =='p'){
            counte++;
          }
          
            if(gameArray[lessY][xb]=='a'|| gameArray[lessY][xb]=='b'){
            count++;
          } if(gameArray[lessY][greatX]=='a' || gameArray[lessY][greatX]=='b'){
            count++;
          } if(gameArray[lessY][lessX]=='a' || gameArray[lessY][lessX]=='b'){
            count++;
          } if(gameArray[yb][lessX]=='a' || gameArray[yb][lessX]=='b'){
            count++;
          }  if(gameArray[yb][greatX]=='a' || gameArray[yb][greatX]=='b'){
            count++;
          } if(gameArray[greatY][lessX]=='a' || gameArray[greatY][lessX]=='b'){
            count++;
          } if(gameArray[greatY][xb]=='a' || gameArray[greatY][xb]=='b'){
            count++;
          } if(gameArray[greatY][greatX]=='a' || gameArray[greatY][greatX]=='b'){
            count++;
          }
          
          if(item =='d' && count == 3){
            gameArray[yb][xb]='p';
          }else if(item =='a'){
            if(count < 2 || count >3){
              //console.log(xa ,ya , count);
              gameArray[yb][xb]='b';
            }
          }
          xb++;
        });
        yb++;
      })
      
        
      
      //console.log(gameArray);
      var y=-1;
    
     var ret = gameArray.map((items) => {
        //console.log(items);     
       var x=-1; 
       y++; 
       
       return (<div className='block-now'>{items.map((item)=>{
         // console.log(y,x,item);
          x++;
            if(item == 'b'){
              gameArray[y][x] ='d';
              item = 'd';
            } else if(item == 'p'){
              gameArray[y][x]='a';
              item = 'a';
            }
             return (<div onClick = {(event)=>this.test2(event)} id={y.toString()+','+x.toString()} className={item}></div>);
         
       
        })}</div>);
      
     }); 
    if(counte ==0){
      this.switcher();
      
    }
    }
    
    //console.log(ret);
    return (<div><div className='block-now but'><button onClick={() => this.switcher()} className='btn btn-primary'>{this.state.edit}</button><button className='btn btn-primary' onClick ={() => this.randomize('random')}>Random</button><button className ='btn btn-primary' onClick={()=> this.randomize('reset')}>Reset</button></div><div style={{float : 'left', display : 'inline',fontSize:'20px'}}><div>{'Speed : ' + speedName}</div><div>{'Generations : ' + this.state.counter}</div><div>{'Size : '+ sizeName}</div></div><div className='game-play'>{ret}</div><div className ='block-now but'><p className='foot'>{'Size : '+sizeName} </p><button onClick = {(event)=>this.sizeChanger(15,15,event)} className='btn btn-primary'>Small</button><button onClick = {(event)=>this.sizeChanger(30,30,event)} className='btn btn-primary'>Medium</button><button onClick = {(event)=>this.sizeChanger(50,50,event)} className='btn btn-primary'>Large</button></div><div className ='block-now but'><p className='foot'>{'Speed : '+ speedName }</p><button onClick = {(event)=>this.speedChanger(1000,event)} className='btn btn-primary'>Slow</button><button onClick = {(event)=>this.speedChanger(100,event)} className='btn btn-primary'>Medium</button><button onClick = {(event)=>this.speedChanger(50,event)} className='btn btn-primary'>Fast</button></div></div>);
  }
}
ReactDOM.render(<Run />, document.querySelector('.render-one'));